     1 00000000                                 [FORMAT "WCOFF"]
     2 00000000                                 [INSTRSET "i486p"]
     3 00000000                                 [OPTIMIZE 1]
     4 00000000                                 [OPTION 1]
     5 00000000                                 [BITS 32]
     6 00000000                                 	EXTERN	_init_gdtidt
     7 00000000                                 	EXTERN	_init_pic
     8 00000000                                 	EXTERN	_io_sti
     9 00000000                                 	EXTERN	_keyfifo
    10 00000000                                 	EXTERN	_fifo8_init
    11 00000000                                 	EXTERN	_mousefifo
    12 00000000                                 	EXTERN	_init_pit
    13 00000000                                 	EXTERN	_io_out8
    14 00000000                                 	EXTERN	_timer_alloc
    15 00000000                                 	EXTERN	_timer_init
    16 00000000                                 	EXTERN	_timer_settime
    17 00000000                                 	EXTERN	_init_keyboard
    18 00000000                                 	EXTERN	_enable_mouse
    19 00000000                                 	EXTERN	_memtest
    20 00000000                                 	EXTERN	_memman_init
    21 00000000                                 	EXTERN	_memman_free
    22 00000000                                 	EXTERN	_init_palette
    23 00000000                                 	EXTERN	_shtctl_init
    24 00000000                                 	EXTERN	_sheet_alloc
    25 00000000                                 	EXTERN	_memman_alloc_4k
    26 00000000                                 	EXTERN	_sheet_setbuf
    27 00000000                                 	EXTERN	_init_screen
    28 00000000                                 	EXTERN	_init_mouse_cursor8
    29 00000000                                 	EXTERN	_sheet_slide
    30 00000000                                 	EXTERN	_sheet_updown
    31 00000000                                 	EXTERN	_sprintf
    32 00000000                                 	EXTERN	_puttext8
    33 00000000                                 	EXTERN	_memman_total
    34 00000000                                 	EXTERN	_sheet_refresh
    35 00000000                                 	EXTERN	_timerctl
    36 00000000                                 	EXTERN	_boxfill8
    37 00000000                                 	EXTERN	_io_cli
    38 00000000                                 	EXTERN	_fifo8_status
    39 00000000                                 	EXTERN	_fifo8_get
    40 00000000                                 	EXTERN	_mouse_decode
    41 00000000                                 [FILE "bootpack.c"]
    42                                          [SECTION .data]
    43 00000000                                 LC0:
    44 00000000 63 6F 75 6E 74 65 72 00         	DB	"counter",0x00
    45 00000008                                 LC1:
    46 00000008 28 25 33 64 2C 20 25 33 64 29   	DB	"(%3d, %3d)",0x00
       00000012 00 
    47 00000013                                 LC2:
    48 00000013 6D 65 6D 6F 72 79 20 25 64 4D   	DB	"memory %dMB   free : %dKB",0x00
       0000001D 42 20 20 20 66 72 65 65 20 3A 
       00000027 20 25 64 4B 42 00 
    49 0000002D                                 LC3:
    50 0000002D 25 30 31 30 64 00               	DB	"%010d",0x00
    51 00000033                                 LC8:
    52 00000033 33 5B 73 65 63 5D 00            	DB	"3[sec]",0x00
    53 0000003A                                 LC7:
    54 0000003A 31 30 5B 73 65 63 5D 00         	DB	"10[sec]",0x00
    55 00000042                                 LC5:
    56 00000042 5B 6C 63 72 20 25 34 64 20 25   	DB	"[lcr %4d %4d]",0x00
       0000004C 34 64 5D 00 
    57 00000050                                 LC6:
    58 00000050 28 25 64 2C 20 25 64 29 00      	DB	"(%d, %d)",0x00
    59 00000059                                 LC4:
    60 00000059 25 30 32 58 00                  	DB	"%02X",0x00
    61                                          [SECTION .text]
    62 00000000                                 	GLOBAL	_HariMain
    63 00000000                                 _HariMain:
    64 00000000 55                              	PUSH	EBP
    65 00000001 89 E5                           	MOV	EBP,ESP
    66 00000003 57                              	PUSH	EDI
    67 00000004 56                              	PUSH	ESI
    68 00000005 53                              	PUSH	EBX
    69 00000006 8D 5D C4                        	LEA	EBX,DWORD [-60+EBP]
    70 00000009 81 EC 00000280                  	SUB	ESP,640
    71 0000000F E8 [00000000]                   	CALL	_init_gdtidt
    72 00000014 E8 [00000000]                   	CALL	_init_pic
    73 00000019 E8 [00000000]                   	CALL	_io_sti
    74 0000001E 8D 85 FFFFFF34                  	LEA	EAX,DWORD [-204+EBP]
    75 00000024 50                              	PUSH	EAX
    76 00000025 6A 20                           	PUSH	32
    77 00000027 68 [00000000]                   	PUSH	_keyfifo
    78 0000002C E8 [00000000]                   	CALL	_fifo8_init
    79 00000031 8D 85 FFFFFEB4                  	LEA	EAX,DWORD [-332+EBP]
    80 00000037 50                              	PUSH	EAX
    81 00000038 68 00000080                     	PUSH	128
    82 0000003D 68 [00000000]                   	PUSH	_mousefifo
    83 00000042 E8 [00000000]                   	CALL	_fifo8_init
    84 00000047 E8 [00000000]                   	CALL	_init_pit
    85 0000004C 68 000000F8                     	PUSH	248
    86 00000051 6A 21                           	PUSH	33
    87 00000053 E8 [00000000]                   	CALL	_io_out8
    88 00000058 83 C4 20                        	ADD	ESP,32
    89 0000005B 68 000000EF                     	PUSH	239
    90 00000060 68 000000A1                     	PUSH	161
    91 00000065 E8 [00000000]                   	CALL	_io_out8
    92 0000006A 8D 85 FFFFFDAC                  	LEA	EAX,DWORD [-596+EBP]
    93 00000070 50                              	PUSH	EAX
    94 00000071 6A 08                           	PUSH	8
    95 00000073 53                              	PUSH	EBX
    96 00000074 E8 [00000000]                   	CALL	_fifo8_init
    97 00000079 E8 [00000000]                   	CALL	_timer_alloc
    98 0000007E 6A 01                           	PUSH	1
    99 00000080 53                              	PUSH	EBX
   100 00000081 89 C6                           	MOV	ESI,EAX
   101 00000083 50                              	PUSH	EAX
   102 00000084 8D 5D A4                        	LEA	EBX,DWORD [-92+EBP]
   103 00000087 E8 [00000000]                   	CALL	_timer_init
   104 0000008C 83 C4 20                        	ADD	ESP,32
   105 0000008F 68 000003E8                     	PUSH	1000
   106 00000094 56                              	PUSH	ESI
   107 00000095 E8 [00000000]                   	CALL	_timer_settime
   108 0000009A 8D 85 FFFFFDA4                  	LEA	EAX,DWORD [-604+EBP]
   109 000000A0 50                              	PUSH	EAX
   110 000000A1 6A 08                           	PUSH	8
   111 000000A3 53                              	PUSH	EBX
   112 000000A4 E8 [00000000]                   	CALL	_fifo8_init
   113 000000A9 E8 [00000000]                   	CALL	_timer_alloc
   114 000000AE 6A 01                           	PUSH	1
   115 000000B0 53                              	PUSH	EBX
   116 000000B1 89 C6                           	MOV	ESI,EAX
   117 000000B3 50                              	PUSH	EAX
   118 000000B4 8D 5D 84                        	LEA	EBX,DWORD [-124+EBP]
   119 000000B7 E8 [00000000]                   	CALL	_timer_init
   120 000000BC 83 C4 20                        	ADD	ESP,32
   121 000000BF 68 0000012C                     	PUSH	300
   122 000000C4 56                              	PUSH	ESI
   123 000000C5 E8 [00000000]                   	CALL	_timer_settime
   124 000000CA 8D 85 FFFFFD9C                  	LEA	EAX,DWORD [-612+EBP]
   125 000000D0 50                              	PUSH	EAX
   126 000000D1 6A 08                           	PUSH	8
   127 000000D3 53                              	PUSH	EBX
   128 000000D4 E8 [00000000]                   	CALL	_fifo8_init
   129 000000D9 E8 [00000000]                   	CALL	_timer_alloc
   130 000000DE 6A 01                           	PUSH	1
   131 000000E0 53                              	PUSH	EBX
   132 000000E1 50                              	PUSH	EAX
   133 000000E2 89 85 FFFFFD7C                  	MOV	DWORD [-644+EBP],EAX
   134 000000E8 E8 [00000000]                   	CALL	_timer_init
   135 000000ED 83 C4 20                        	ADD	ESP,32
   136 000000F0 6A 32                           	PUSH	50
   137 000000F2 FF B5 FFFFFD7C                  	PUSH	DWORD [-644+EBP]
   138 000000F8 E8 [00000000]                   	CALL	_timer_settime
   139 000000FD E8 [00000000]                   	CALL	_init_keyboard
   140 00000102 8D 45 E4                        	LEA	EAX,DWORD [-28+EBP]
   141 00000105 50                              	PUSH	EAX
   142 00000106 E8 [00000000]                   	CALL	_enable_mouse
   143 0000010B 68 BFFFFFFF                     	PUSH	-1073741825
   144 00000110 68 00400000                     	PUSH	4194304
   145 00000115 E8 [00000000]                   	CALL	_memtest
   146 0000011A 68 003C0000                     	PUSH	3932160
   147 0000011F 89 C6                           	MOV	ESI,EAX
   148 00000121 E8 [00000000]                   	CALL	_memman_init
   149 00000126 68 0009E000                     	PUSH	647168
   150 0000012B 68 00001000                     	PUSH	4096
   151 00000130 68 003C0000                     	PUSH	3932160
   152 00000135 E8 [00000000]                   	CALL	_memman_free
   153 0000013A 8D 86 FFC00000                  	LEA	EAX,DWORD [-4194304+ESI]
   154 00000140 83 C4 24                        	ADD	ESP,36
   155 00000143 50                              	PUSH	EAX
   156 00000144 68 00400000                     	PUSH	4194304
   157 00000149 68 003C0000                     	PUSH	3932160
   158 0000014E E8 [00000000]                   	CALL	_memman_free
   159 00000153 E8 [00000000]                   	CALL	_init_palette
   160 00000158 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   161 0000015F 50                              	PUSH	EAX
   162 00000160 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   163 00000167 50                              	PUSH	EAX
   164 00000168 FF 35 00000FF8                  	PUSH	DWORD [4088]
   165 0000016E 68 003C0000                     	PUSH	3932160
   166 00000173 E8 [00000000]                   	CALL	_shtctl_init
   167 00000178 89 C3                           	MOV	EBX,EAX
   168 0000017A 50                              	PUSH	EAX
   169 0000017B E8 [00000000]                   	CALL	_sheet_alloc
   170 00000180 83 C4 20                        	ADD	ESP,32
   171 00000183 53                              	PUSH	EBX
   172 00000184 89 85 FFFFFD90                  	MOV	DWORD [-624+EBP],EAX
   173 0000018A E8 [00000000]                   	CALL	_sheet_alloc
   174 0000018F 53                              	PUSH	EBX
   175 00000190 8D 9D FFFFFDB4                  	LEA	EBX,DWORD [-588+EBP]
   176 00000196 89 85 FFFFFD8C                  	MOV	DWORD [-628+EBP],EAX
   177 0000019C E8 [00000000]                   	CALL	_sheet_alloc
   178 000001A1 0F BF 15 00000FF6               	MOVSX	EDX,WORD [4086]
   179 000001A8 89 85 FFFFFD88                  	MOV	DWORD [-632+EBP],EAX
   180 000001AE 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   181 000001B5 0F AF C2                        	IMUL	EAX,EDX
   182 000001B8 50                              	PUSH	EAX
   183 000001B9 68 003C0000                     	PUSH	3932160
   184 000001BE E8 [00000000]                   	CALL	_memman_alloc_4k
   185 000001C3 68 00002080                     	PUSH	8320
   186 000001C8 68 003C0000                     	PUSH	3932160
   187 000001CD 89 85 FFFFFD84                  	MOV	DWORD [-636+EBP],EAX
   188 000001D3 E8 [00000000]                   	CALL	_memman_alloc_4k
   189 000001D8 6A FF                           	PUSH	-1
   190 000001DA 89 85 FFFFFD80                  	MOV	DWORD [-640+EBP],EAX
   191 000001E0 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   192 000001E7 50                              	PUSH	EAX
   193 000001E8 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   194 000001EF 50                              	PUSH	EAX
   195 000001F0 FF B5 FFFFFD84                  	PUSH	DWORD [-636+EBP]
   196 000001F6 FF B5 FFFFFD90                  	PUSH	DWORD [-624+EBP]
   197 000001FC E8 [00000000]                   	CALL	_sheet_setbuf
   198 00000201 83 C4 2C                        	ADD	ESP,44
   199 00000204 6A 63                           	PUSH	99
   200 00000206 6A 10                           	PUSH	16
   201 00000208 6A 10                           	PUSH	16
   202 0000020A 53                              	PUSH	EBX
   203 0000020B FF B5 FFFFFD8C                  	PUSH	DWORD [-628+EBP]
   204 00000211 E8 [00000000]                   	CALL	_sheet_setbuf
   205 00000216 6A FF                           	PUSH	-1
   206 00000218 6A 34                           	PUSH	52
   207 0000021A 68 000000A0                     	PUSH	160
   208 0000021F FF B5 FFFFFD80                  	PUSH	DWORD [-640+EBP]
   209 00000225 FF B5 FFFFFD88                  	PUSH	DWORD [-632+EBP]
   210 0000022B E8 [00000000]                   	CALL	_sheet_setbuf
   211 00000230 83 C4 28                        	ADD	ESP,40
   212 00000233 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   213 0000023A 50                              	PUSH	EAX
   214 0000023B 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   215 00000242 50                              	PUSH	EAX
   216 00000243 FF B5 FFFFFD84                  	PUSH	DWORD [-636+EBP]
   217 00000249 E8 [00000000]                   	CALL	_init_screen
   218 0000024E 6A 63                           	PUSH	99
   219 00000250 53                              	PUSH	EBX
   220 00000251 BB 00000002                     	MOV	EBX,2
   221 00000256 E8 [00000000]                   	CALL	_init_mouse_cursor8
   222 0000025B 68 [00000000]                   	PUSH	LC0
   223 00000260 6A 34                           	PUSH	52
   224 00000262 68 000000A0                     	PUSH	160
   225 00000267 FF B5 FFFFFD80                  	PUSH	DWORD [-640+EBP]
   226 0000026D E8 0000050E                     	CALL	_make_window8
   227 00000272 83 C4 24                        	ADD	ESP,36
   228 00000275 6A 00                           	PUSH	0
   229 00000277 6A 00                           	PUSH	0
   230 00000279 FF B5 FFFFFD90                  	PUSH	DWORD [-624+EBP]
   231 0000027F E8 [00000000]                   	CALL	_sheet_slide
   232 00000284 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   233 0000028B 8D 48 F0                        	LEA	ECX,DWORD [-16+EAX]
   234 0000028E 89 C8                           	MOV	EAX,ECX
   235 00000290 99                              	CDQ
   236 00000291 F7 FB                           	IDIV	EBX
   237 00000293 89 85 FFFFFD98                  	MOV	DWORD [-616+EBP],EAX
   238 00000299 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   239 000002A0 8D 48 D4                        	LEA	ECX,DWORD [-44+EAX]
   240 000002A3 89 C8                           	MOV	EAX,ECX
   241 000002A5 99                              	CDQ
   242 000002A6 F7 FB                           	IDIV	EBX
   243 000002A8 50                              	PUSH	EAX
   244 000002A9 89 85 FFFFFD94                  	MOV	DWORD [-620+EBP],EAX
   245 000002AF FF B5 FFFFFD98                  	PUSH	DWORD [-616+EBP]
   246 000002B5 FF B5 FFFFFD8C                  	PUSH	DWORD [-628+EBP]
   247 000002BB 8D 9D FFFFFF54                  	LEA	EBX,DWORD [-172+EBP]
   248 000002C1 E8 [00000000]                   	CALL	_sheet_slide
   249 000002C6 6A 48                           	PUSH	72
   250 000002C8 6A 50                           	PUSH	80
   251 000002CA FF B5 FFFFFD88                  	PUSH	DWORD [-632+EBP]
   252 000002D0 E8 [00000000]                   	CALL	_sheet_slide
   253 000002D5 83 C4 24                        	ADD	ESP,36
   254 000002D8 6A 00                           	PUSH	0
   255 000002DA FF B5 FFFFFD90                  	PUSH	DWORD [-624+EBP]
   256 000002E0 E8 [00000000]                   	CALL	_sheet_updown
   257 000002E5 6A 01                           	PUSH	1
   258 000002E7 FF B5 FFFFFD88                  	PUSH	DWORD [-632+EBP]
   259 000002ED E8 [00000000]                   	CALL	_sheet_updown
   260 000002F2 6A 02                           	PUSH	2
   261 000002F4 FF B5 FFFFFD8C                  	PUSH	DWORD [-628+EBP]
   262 000002FA E8 [00000000]                   	CALL	_sheet_updown
   263 000002FF FF B5 FFFFFD94                  	PUSH	DWORD [-620+EBP]
   264 00000305 FF B5 FFFFFD98                  	PUSH	DWORD [-616+EBP]
   265 0000030B 68 [00000008]                   	PUSH	LC1
   266 00000310 53                              	PUSH	EBX
   267 00000311 E8 [00000000]                   	CALL	_sprintf
   268 00000316 83 C4 28                        	ADD	ESP,40
   269 00000319 53                              	PUSH	EBX
   270 0000031A 6A 07                           	PUSH	7
   271 0000031C 6A 00                           	PUSH	0
   272 0000031E 6A 00                           	PUSH	0
   273 00000320 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   274 00000327 50                              	PUSH	EAX
   275 00000328 FF B5 FFFFFD84                  	PUSH	DWORD [-636+EBP]
   276 0000032E E8 [00000000]                   	CALL	_puttext8
   277 00000333 68 003C0000                     	PUSH	3932160
   278 00000338 E8 [00000000]                   	CALL	_memman_total
   279 0000033D C1 E8 0A                        	SHR	EAX,10
   280 00000340 C1 EE 14                        	SHR	ESI,20
   281 00000343 89 04 24                        	MOV	DWORD [ESP],EAX
   282 00000346 56                              	PUSH	ESI
   283 00000347 68 [00000013]                   	PUSH	LC2
   284 0000034C 53                              	PUSH	EBX
   285 0000034D E8 [00000000]                   	CALL	_sprintf
   286 00000352 83 C4 28                        	ADD	ESP,40
   287 00000355 53                              	PUSH	EBX
   288 00000356 6A 07                           	PUSH	7
   289 00000358 6A 20                           	PUSH	32
   290 0000035A 6A 00                           	PUSH	0
   291 0000035C 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   292 00000363 50                              	PUSH	EAX
   293 00000364 FF B5 FFFFFD84                  	PUSH	DWORD [-636+EBP]
   294 0000036A E8 [00000000]                   	CALL	_puttext8
   295 0000036F 6A 30                           	PUSH	48
   296 00000371 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   297 00000378 50                              	PUSH	EAX
   298 00000379 6A 00                           	PUSH	0
   299 0000037B                                 L27:
   300 0000037B 6A 00                           	PUSH	0
   301 0000037D FF B5 FFFFFD90                  	PUSH	DWORD [-624+EBP]
   302 00000383 E8 [00000000]                   	CALL	_sheet_refresh
   303 00000388 83 C4 2C                        	ADD	ESP,44
   304 0000038B                                 L2:
   305 0000038B FF 35 [00000000]                	PUSH	DWORD [_timerctl]
   306 00000391 68 [0000002D]                   	PUSH	LC3
   307 00000396 8D 9D FFFFFF54                  	LEA	EBX,DWORD [-172+EBP]
   308 0000039C 53                              	PUSH	EBX
   309 0000039D 8D 7D C4                        	LEA	EDI,DWORD [-60+EBP]
   310 000003A0 8D 75 84                        	LEA	ESI,DWORD [-124+EBP]
   311 000003A3 E8 [00000000]                   	CALL	_sprintf
   312 000003A8 6A 2B                           	PUSH	43
   313 000003AA 6A 77                           	PUSH	119
   314 000003AC 6A 1C                           	PUSH	28
   315 000003AE 6A 28                           	PUSH	40
   316 000003B0 6A 08                           	PUSH	8
   317 000003B2 68 000000A0                     	PUSH	160
   318 000003B7 FF B5 FFFFFD80                  	PUSH	DWORD [-640+EBP]
   319 000003BD E8 [00000000]                   	CALL	_boxfill8
   320 000003C2 83 C4 28                        	ADD	ESP,40
   321 000003C5 53                              	PUSH	EBX
   322 000003C6 6A 00                           	PUSH	0
   323 000003C8 6A 1C                           	PUSH	28
   324 000003CA 6A 28                           	PUSH	40
   325 000003CC 68 000000A0                     	PUSH	160
   326 000003D1 FF B5 FFFFFD80                  	PUSH	DWORD [-640+EBP]
   327 000003D7 E8 [00000000]                   	CALL	_puttext8
   328 000003DC 6A 2C                           	PUSH	44
   329 000003DE 6A 78                           	PUSH	120
   330 000003E0 6A 1C                           	PUSH	28
   331 000003E2 6A 28                           	PUSH	40
   332 000003E4 FF B5 FFFFFD88                  	PUSH	DWORD [-632+EBP]
   333 000003EA E8 [00000000]                   	CALL	_sheet_refresh
   334 000003EF 83 C4 2C                        	ADD	ESP,44
   335 000003F2 E8 [00000000]                   	CALL	_io_cli
   336 000003F7 68 [00000000]                   	PUSH	_keyfifo
   337 000003FC E8 [00000000]                   	CALL	_fifo8_status
   338 00000401 68 [00000000]                   	PUSH	_mousefifo
   339 00000406 89 C3                           	MOV	EBX,EAX
   340 00000408 E8 [00000000]                   	CALL	_fifo8_status
   341 0000040D 57                              	PUSH	EDI
   342 0000040E 01 C3                           	ADD	EBX,EAX
   343 00000410 E8 [00000000]                   	CALL	_fifo8_status
   344 00000415 8D 55 A4                        	LEA	EDX,DWORD [-92+EBP]
   345 00000418 52                              	PUSH	EDX
   346 00000419 01 C3                           	ADD	EBX,EAX
   347 0000041B E8 [00000000]                   	CALL	_fifo8_status
   348 00000420 56                              	PUSH	ESI
   349 00000421 01 C3                           	ADD	EBX,EAX
   350 00000423 E8 [00000000]                   	CALL	_fifo8_status
   351 00000428 83 C4 14                        	ADD	ESP,20
   352 0000042B 8D 04 18                        	LEA	EAX,DWORD [EAX+EBX*1]
   353 0000042E 85 C0                           	TEST	EAX,EAX
   354 00000430 0F 84 00000340                  	JE	L29
   355 00000436 68 [00000000]                   	PUSH	_keyfifo
   356 0000043B E8 [00000000]                   	CALL	_fifo8_status
   357 00000440 59                              	POP	ECX
   358 00000441 85 C0                           	TEST	EAX,EAX
   359 00000443 0F 85 000002C5                  	JNE	L30
   360 00000449 68 [00000000]                   	PUSH	_mousefifo
   361 0000044E E8 [00000000]                   	CALL	_fifo8_status
   362 00000453 5A                              	POP	EDX
   363 00000454 85 C0                           	TEST	EAX,EAX
   364 00000456 0F 85 0000012A                  	JNE	L31
   365 0000045C 57                              	PUSH	EDI
   366 0000045D E8 [00000000]                   	CALL	_fifo8_status
   367 00000462 5B                              	POP	EBX
   368 00000463 85 C0                           	TEST	EAX,EAX
   369 00000465 0F 85 000000EA                  	JNE	L32
   370 0000046B 8D 55 A4                        	LEA	EDX,DWORD [-92+EBP]
   371 0000046E 52                              	PUSH	EDX
   372 0000046F E8 [00000000]                   	CALL	_fifo8_status
   373 00000474 59                              	POP	ECX
   374 00000475 85 C0                           	TEST	EAX,EAX
   375 00000477 0F 85 00000091                  	JNE	L33
   376 0000047D 56                              	PUSH	ESI
   377 0000047E E8 [00000000]                   	CALL	_fifo8_status
   378 00000483 5A                              	POP	EDX
   379 00000484 85 C0                           	TEST	EAX,EAX
   380 00000486 0F 84 FFFFFEFF                  	JE	L2
   381 0000048C 56                              	PUSH	ESI
   382 0000048D E8 [00000000]                   	CALL	_fifo8_get
   383 00000492 89 C3                           	MOV	EBX,EAX
   384 00000494 E8 [00000000]                   	CALL	_io_sti
   385 00000499 58                              	POP	EAX
   386 0000049A 85 DB                           	TEST	EBX,EBX
   387 0000049C 74 56                           	JE	L24
   388 0000049E 6A 00                           	PUSH	0
   389 000004A0 56                              	PUSH	ESI
   390 000004A1 FF B5 FFFFFD7C                  	PUSH	DWORD [-644+EBP]
   391 000004A7 E8 [00000000]                   	CALL	_timer_init
   392 000004AC 6A 6F                           	PUSH	111
   393 000004AE 6A 0F                           	PUSH	15
   394 000004B0 6A 60                           	PUSH	96
   395 000004B2 6A 08                           	PUSH	8
   396 000004B4 6A 07                           	PUSH	7
   397 000004B6                                 L28:
   398 000004B6 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   399 000004BD 50                              	PUSH	EAX
   400 000004BE FF B5 FFFFFD84                  	PUSH	DWORD [-636+EBP]
   401 000004C4 E8 [00000000]                   	CALL	_boxfill8
   402 000004C9 83 C4 28                        	ADD	ESP,40
   403 000004CC 6A 32                           	PUSH	50
   404 000004CE FF B5 FFFFFD7C                  	PUSH	DWORD [-644+EBP]
   405 000004D4 E8 [00000000]                   	CALL	_timer_settime
   406 000004D9 6A 6F                           	PUSH	111
   407 000004DB 6A 0F                           	PUSH	15
   408 000004DD 6A 60                           	PUSH	96
   409 000004DF 6A 08                           	PUSH	8
   410 000004E1 FF B5 FFFFFD90                  	PUSH	DWORD [-624+EBP]
   411 000004E7 E8 [00000000]                   	CALL	_sheet_refresh
   412 000004EC 83 C4 1C                        	ADD	ESP,28
   413 000004EF E9 FFFFFE97                     	JMP	L2
   414 000004F4                                 L24:
   415 000004F4 6A 01                           	PUSH	1
   416 000004F6 56                              	PUSH	ESI
   417 000004F7 FF B5 FFFFFD7C                  	PUSH	DWORD [-644+EBP]
   418 000004FD E8 [00000000]                   	CALL	_timer_init
   419 00000502 6A 6F                           	PUSH	111
   420 00000504 6A 0F                           	PUSH	15
   421 00000506 6A 60                           	PUSH	96
   422 00000508 6A 08                           	PUSH	8
   423 0000050A 6A 0E                           	PUSH	14
   424 0000050C EB A8                           	JMP	L28
   425 0000050E                                 L33:
   426 0000050E 8D 5D A4                        	LEA	EBX,DWORD [-92+EBP]
   427 00000511 53                              	PUSH	EBX
   428 00000512 E8 [00000000]                   	CALL	_fifo8_get
   429 00000517 E8 [00000000]                   	CALL	_io_sti
   430 0000051C 68 [00000033]                   	PUSH	LC8
   431 00000521 6A 07                           	PUSH	7
   432 00000523 6A 50                           	PUSH	80
   433 00000525 6A 00                           	PUSH	0
   434 00000527 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   435 0000052E 50                              	PUSH	EAX
   436 0000052F FF B5 FFFFFD84                  	PUSH	DWORD [-636+EBP]
   437 00000535 E8 [00000000]                   	CALL	_puttext8
   438 0000053A 6A 60                           	PUSH	96
   439 0000053C 6A 30                           	PUSH	48
   440 0000053E 6A 50                           	PUSH	80
   441 00000540                                 L26:
   442 00000540 6A 00                           	PUSH	0
   443 00000542 FF B5 FFFFFD90                  	PUSH	DWORD [-624+EBP]
   444 00000548 E8 [00000000]                   	CALL	_sheet_refresh
   445 0000054D 83 C4 30                        	ADD	ESP,48
   446 00000550 E9 FFFFFE36                     	JMP	L2
   447 00000555                                 L32:
   448 00000555 57                              	PUSH	EDI
   449 00000556 E8 [00000000]                   	CALL	_fifo8_get
   450 0000055B E8 [00000000]                   	CALL	_io_sti
   451 00000560 68 [0000003A]                   	PUSH	LC7
   452 00000565 6A 07                           	PUSH	7
   453 00000567 6A 40                           	PUSH	64
   454 00000569 6A 00                           	PUSH	0
   455 0000056B 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   456 00000572 50                              	PUSH	EAX
   457 00000573 FF B5 FFFFFD84                  	PUSH	DWORD [-636+EBP]
   458 00000579 E8 [00000000]                   	CALL	_puttext8
   459 0000057E 6A 50                           	PUSH	80
   460 00000580 6A 38                           	PUSH	56
   461 00000582 6A 40                           	PUSH	64
   462 00000584 EB BA                           	JMP	L26
   463 00000586                                 L31:
   464 00000586 68 [00000000]                   	PUSH	_mousefifo
   465 0000058B E8 [00000000]                   	CALL	_fifo8_get
   466 00000590 89 C3                           	MOV	EBX,EAX
   467 00000592 E8 [00000000]                   	CALL	_io_sti
   468 00000597 0F B6 C3                        	MOVZX	EAX,BL
   469 0000059A 50                              	PUSH	EAX
   470 0000059B 8D 45 E4                        	LEA	EAX,DWORD [-28+EBP]
   471 0000059E 50                              	PUSH	EAX
   472 0000059F E8 [00000000]                   	CALL	_mouse_decode
   473 000005A4 83 C4 0C                        	ADD	ESP,12
   474 000005A7 85 C0                           	TEST	EAX,EAX
   475 000005A9 0F 84 FFFFFDDC                  	JE	L2
   476 000005AF FF 75 EC                        	PUSH	DWORD [-20+EBP]
   477 000005B2 FF 75 E8                        	PUSH	DWORD [-24+EBP]
   478 000005B5 68 [00000042]                   	PUSH	LC5
   479 000005BA 8D 95 FFFFFF54                  	LEA	EDX,DWORD [-172+EBP]
   480 000005C0 52                              	PUSH	EDX
   481 000005C1 E8 [00000000]                   	CALL	_sprintf
   482 000005C6 83 C4 10                        	ADD	ESP,16
   483 000005C9 8B 45 F0                        	MOV	EAX,DWORD [-16+EBP]
   484 000005CC A9 00000001                     	TEST	EAX,1
   485 000005D1 74 07                           	JE	L11
   486 000005D3 C6 85 FFFFFF55 4C               	MOV	BYTE [-171+EBP],76
   487 000005DA                                 L11:
   488 000005DA A9 00000002                     	TEST	EAX,2
   489 000005DF 74 07                           	JE	L12
   490 000005E1 C6 85 FFFFFF57 52               	MOV	BYTE [-169+EBP],82
   491 000005E8                                 L12:
   492 000005E8 83 E0 04                        	AND	EAX,4
   493 000005EB 74 07                           	JE	L13
   494 000005ED C6 85 FFFFFF56 43               	MOV	BYTE [-170+EBP],67
   495 000005F4                                 L13:
   496 000005F4 6A 0F                           	PUSH	15
   497 000005F6 8D 9D FFFFFF54                  	LEA	EBX,DWORD [-172+EBP]
   498 000005FC 53                              	PUSH	EBX
   499 000005FD 6A 0E                           	PUSH	14
   500 000005FF 6A 07                           	PUSH	7
   501 00000601 6A 10                           	PUSH	16
   502 00000603 6A 20                           	PUSH	32
   503 00000605 FF B5 FFFFFD90                  	PUSH	DWORD [-624+EBP]
   504 0000060B E8 000002DC                     	CALL	_puttext8_sht
   505 00000610 8B 55 E8                        	MOV	EDX,DWORD [-24+EBP]
   506 00000613 8B 45 EC                        	MOV	EAX,DWORD [-20+EBP]
   507 00000616 83 C4 1C                        	ADD	ESP,28
   508 00000619 01 85 FFFFFD94                  	ADD	DWORD [-620+EBP],EAX
   509 0000061F 01 95 FFFFFD98                  	ADD	DWORD [-616+EBP],EDX
   510 00000625 0F 88 000000D4                  	JS	L34
   511 0000062B                                 L14:
   512 0000062B 83 BD FFFFFD94 00               	CMP	DWORD [-620+EBP],0
   513 00000632 0F 88 000000B8                  	JS	L35
   514 00000638                                 L15:
   515 00000638 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   516 0000063F 48                              	DEC	EAX
   517 00000640 39 85 FFFFFD98                  	CMP	DWORD [-616+EBP],EAX
   518 00000646 7E 06                           	JLE	L16
   519 00000648 89 85 FFFFFD98                  	MOV	DWORD [-616+EBP],EAX
   520 0000064E                                 L16:
   521 0000064E 0F BF 05 00000FF6               	MOVSX	EAX,WORD [4086]
   522 00000655 48                              	DEC	EAX
   523 00000656 39 85 FFFFFD94                  	CMP	DWORD [-620+EBP],EAX
   524 0000065C 7E 06                           	JLE	L17
   525 0000065E 89 85 FFFFFD94                  	MOV	DWORD [-620+EBP],EAX
   526 00000664                                 L17:
   527 00000664 FF B5 FFFFFD94                  	PUSH	DWORD [-620+EBP]
   528 0000066A FF B5 FFFFFD98                  	PUSH	DWORD [-616+EBP]
   529 00000670 68 [00000050]                   	PUSH	LC6
   530 00000675 8D 9D FFFFFF54                  	LEA	EBX,DWORD [-172+EBP]
   531 0000067B 53                              	PUSH	EBX
   532 0000067C E8 [00000000]                   	CALL	_sprintf
   533 00000681 6A 0F                           	PUSH	15
   534 00000683 6A 4F                           	PUSH	79
   535 00000685 6A 00                           	PUSH	0
   536 00000687 6A 00                           	PUSH	0
   537 00000689 6A 0E                           	PUSH	14
   538 0000068B 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   539 00000692 50                              	PUSH	EAX
   540 00000693 FF B5 FFFFFD84                  	PUSH	DWORD [-636+EBP]
   541 00000699 E8 [00000000]                   	CALL	_boxfill8
   542 0000069E 83 C4 2C                        	ADD	ESP,44
   543 000006A1 53                              	PUSH	EBX
   544 000006A2 6A 07                           	PUSH	7
   545 000006A4 6A 00                           	PUSH	0
   546 000006A6 6A 00                           	PUSH	0
   547 000006A8 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   548 000006AF 50                              	PUSH	EAX
   549 000006B0 FF B5 FFFFFD84                  	PUSH	DWORD [-636+EBP]
   550 000006B6 E8 [00000000]                   	CALL	_puttext8
   551 000006BB 6A 10                           	PUSH	16
   552 000006BD 6A 50                           	PUSH	80
   553 000006BF 6A 00                           	PUSH	0
   554 000006C1 6A 00                           	PUSH	0
   555 000006C3 FF B5 FFFFFD90                  	PUSH	DWORD [-624+EBP]
   556 000006C9 E8 [00000000]                   	CALL	_sheet_refresh
   557 000006CE 83 C4 2C                        	ADD	ESP,44
   558 000006D1 FF B5 FFFFFD94                  	PUSH	DWORD [-620+EBP]
   559 000006D7 FF B5 FFFFFD98                  	PUSH	DWORD [-616+EBP]
   560 000006DD FF B5 FFFFFD8C                  	PUSH	DWORD [-628+EBP]
   561 000006E3 E8 [00000000]                   	CALL	_sheet_slide
   562 000006E8 83 C4 0C                        	ADD	ESP,12
   563 000006EB E9 FFFFFC9B                     	JMP	L2
   564 000006F0                                 L35:
   565 000006F0 C7 85 FFFFFD94 00000000         	MOV	DWORD [-620+EBP],0
   566 000006FA E9 FFFFFF39                     	JMP	L15
   567 000006FF                                 L34:
   568 000006FF C7 85 FFFFFD98 00000000         	MOV	DWORD [-616+EBP],0
   569 00000709 E9 FFFFFF1D                     	JMP	L14
   570 0000070E                                 L30:
   571 0000070E 68 [00000000]                   	PUSH	_keyfifo
   572 00000713 E8 [00000000]                   	CALL	_fifo8_get
   573 00000718 89 C3                           	MOV	EBX,EAX
   574 0000071A E8 [00000000]                   	CALL	_io_sti
   575 0000071F 53                              	PUSH	EBX
   576 00000720 8D 9D FFFFFF54                  	LEA	EBX,DWORD [-172+EBP]
   577 00000726 68 [00000059]                   	PUSH	LC4
   578 0000072B 53                              	PUSH	EBX
   579 0000072C E8 [00000000]                   	CALL	_sprintf
   580 00000731 6A 1F                           	PUSH	31
   581 00000733 6A 0F                           	PUSH	15
   582 00000735 6A 10                           	PUSH	16
   583 00000737 6A 00                           	PUSH	0
   584 00000739 6A 04                           	PUSH	4
   585 0000073B 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   586 00000742 50                              	PUSH	EAX
   587 00000743 FF 35 00000FF8                  	PUSH	DWORD [4088]
   588 00000749 E8 [00000000]                   	CALL	_boxfill8
   589 0000074E 83 C4 2C                        	ADD	ESP,44
   590 00000751 53                              	PUSH	EBX
   591 00000752 6A 07                           	PUSH	7
   592 00000754 6A 10                           	PUSH	16
   593 00000756 6A 00                           	PUSH	0
   594 00000758 0F BF 05 00000FF4               	MOVSX	EAX,WORD [4084]
   595 0000075F 50                              	PUSH	EAX
   596 00000760 FF 35 00000FF8                  	PUSH	DWORD [4088]
   597 00000766 E8 [00000000]                   	CALL	_puttext8
   598 0000076B 6A 20                           	PUSH	32
   599 0000076D 6A 10                           	PUSH	16
   600 0000076F 6A 10                           	PUSH	16
   601 00000771 E9 FFFFFC05                     	JMP	L27
   602 00000776                                 L29:
   603 00000776 E8 [00000000]                   	CALL	_io_sti
   604 0000077B E9 FFFFFC0B                     	JMP	L2
   605                                          [SECTION .data]
   606 0000005E                                 _closebtn.0:
   607 0000005E 4F 4F 4F 4F 4F 4F 4F 4F 4F 4F   	DB	"OOOOOOOOOOOOOOO@"
       00000068 4F 4F 4F 4F 4F 40 
   608 0000006E 4F 51 51 51 51 51 51 51 51 51   	DB	"OQQQQQQQQQQQQQ$@"
       00000078 51 51 51 51 24 40 
   609 0000007E 4F 51 51 51 51 51 51 51 51 51   	DB	"OQQQQQQQQQQQQQ$@"
       00000088 51 51 51 51 24 40 
   610 0000008E 4F 51 51 51 40 40 51 51 51 51   	DB	"OQQQ@@QQQQ@@QQ$@"
       00000098 40 40 51 51 24 40 
   611 0000009E 4F 51 51 51 51 40 40 51 51 40   	DB	"OQQQQ@@QQ@@QQQ$@"
       000000A8 40 51 51 51 24 40 
   612 000000AE 4F 51 51 51 51 51 40 40 40 40   	DB	"OQQQQQ@@@@QQQQ$@"
       000000B8 51 51 51 51 24 40 
   613 000000BE 4F 51 51 51 51 51 51 40 40 51   	DB	"OQQQQQQ@@QQQQQ$@"
       000000C8 51 51 51 51 24 40 
   614 000000CE 4F 51 51 51 51 51 40 40 40 40   	DB	"OQQQQQ@@@@QQQQ$@"
       000000D8 51 51 51 51 24 40 
   615 000000DE 4F 51 51 51 51 40 40 51 51 40   	DB	"OQQQQ@@QQ@@QQQ$@"
       000000E8 40 51 51 51 24 40 
   616 000000EE 4F 51 51 51 40 40 51 51 51 51   	DB	"OQQQ@@QQQQ@@QQ$@"
       000000F8 40 40 51 51 24 40 
   617 000000FE 4F 51 51 51 51 51 51 51 51 51   	DB	"OQQQQQQQQQQQQQ$@"
       00000108 51 51 51 51 24 40 
   618 0000010E 4F 51 51 51 51 51 51 51 51 51   	DB	"OQQQQQQQQQQQQQ$@"
       00000118 51 51 51 51 24 40 
   619 0000011E 4F 24 24 24 24 24 24 24 24 24   	DB	"O$$$$$$$$$$$$$$@"
       00000128 24 24 24 24 24 40 
   620 0000012E 40 40 40 40 40 40 40 40 40 40   	DB	"@@@@@@@@@@@@@@@@"
       00000138 40 40 40 40 40 40 
   621                                          [SECTION .text]
   622 00000780                                 	GLOBAL	_make_window8
   623 00000780                                 _make_window8:
   624 00000780 55                              	PUSH	EBP
   625 00000781 89 E5                           	MOV	EBP,ESP
   626 00000783 57                              	PUSH	EDI
   627 00000784 56                              	PUSH	ESI
   628 00000785 53                              	PUSH	EBX
   629 00000786 83 EC 14                        	SUB	ESP,20
   630 00000789 8B 5D 0C                        	MOV	EBX,DWORD [12+EBP]
   631 0000078C 6A 00                           	PUSH	0
   632 0000078E 8D 43 FF                        	LEA	EAX,DWORD [-1+EBX]
   633 00000791 8D 7B FE                        	LEA	EDI,DWORD [-2+EBX]
   634 00000794 50                              	PUSH	EAX
   635 00000795 89 45 EC                        	MOV	DWORD [-20+EBP],EAX
   636 00000798 6A 00                           	PUSH	0
   637 0000079A 6A 00                           	PUSH	0
   638 0000079C 6A 08                           	PUSH	8
   639 0000079E 53                              	PUSH	EBX
   640 0000079F FF 75 08                        	PUSH	DWORD [8+EBP]
   641 000007A2 E8 [00000000]                   	CALL	_boxfill8
   642 000007A7 6A 01                           	PUSH	1
   643 000007A9 57                              	PUSH	EDI
   644 000007AA 6A 01                           	PUSH	1
   645 000007AC 6A 01                           	PUSH	1
   646 000007AE 6A 07                           	PUSH	7
   647 000007B0 53                              	PUSH	EBX
   648 000007B1 FF 75 08                        	PUSH	DWORD [8+EBP]
   649 000007B4 E8 [00000000]                   	CALL	_boxfill8
   650 000007B9 8B 55 10                        	MOV	EDX,DWORD [16+EBP]
   651 000007BC 83 C4 38                        	ADD	ESP,56
   652 000007BF 4A                              	DEC	EDX
   653 000007C0 89 55 E8                        	MOV	DWORD [-24+EBP],EDX
   654 000007C3 52                              	PUSH	EDX
   655 000007C4 6A 00                           	PUSH	0
   656 000007C6 6A 00                           	PUSH	0
   657 000007C8 6A 00                           	PUSH	0
   658 000007CA 6A 08                           	PUSH	8
   659 000007CC 53                              	PUSH	EBX
   660 000007CD FF 75 08                        	PUSH	DWORD [8+EBP]
   661 000007D0 E8 [00000000]                   	CALL	_boxfill8
   662 000007D5 8B 75 10                        	MOV	ESI,DWORD [16+EBP]
   663 000007D8 83 EE 02                        	SUB	ESI,2
   664 000007DB 56                              	PUSH	ESI
   665 000007DC 6A 01                           	PUSH	1
   666 000007DE 6A 01                           	PUSH	1
   667 000007E0 6A 01                           	PUSH	1
   668 000007E2 6A 07                           	PUSH	7
   669 000007E4 53                              	PUSH	EBX
   670 000007E5 FF 75 08                        	PUSH	DWORD [8+EBP]
   671 000007E8 E8 [00000000]                   	CALL	_boxfill8
   672 000007ED 83 C4 38                        	ADD	ESP,56
   673 000007F0 56                              	PUSH	ESI
   674 000007F1 57                              	PUSH	EDI
   675 000007F2 6A 01                           	PUSH	1
   676 000007F4 57                              	PUSH	EDI
   677 000007F5 6A 0F                           	PUSH	15
   678 000007F7 53                              	PUSH	EBX
   679 000007F8 FF 75 08                        	PUSH	DWORD [8+EBP]
   680 000007FB E8 [00000000]                   	CALL	_boxfill8
   681 00000800 FF 75 E8                        	PUSH	DWORD [-24+EBP]
   682 00000803 FF 75 EC                        	PUSH	DWORD [-20+EBP]
   683 00000806 6A 00                           	PUSH	0
   684 00000808 FF 75 EC                        	PUSH	DWORD [-20+EBP]
   685 0000080B 6A 00                           	PUSH	0
   686 0000080D 53                              	PUSH	EBX
   687 0000080E FF 75 08                        	PUSH	DWORD [8+EBP]
   688 00000811 E8 [00000000]                   	CALL	_boxfill8
   689 00000816 8B 45 10                        	MOV	EAX,DWORD [16+EBP]
   690 00000819 83 C4 38                        	ADD	ESP,56
   691 0000081C 83 E8 03                        	SUB	EAX,3
   692 0000081F 50                              	PUSH	EAX
   693 00000820 8D 43 FD                        	LEA	EAX,DWORD [-3+EBX]
   694 00000823 50                              	PUSH	EAX
   695 00000824 6A 02                           	PUSH	2
   696 00000826 6A 02                           	PUSH	2
   697 00000828 6A 08                           	PUSH	8
   698 0000082A 53                              	PUSH	EBX
   699 0000082B FF 75 08                        	PUSH	DWORD [8+EBP]
   700 0000082E E8 [00000000]                   	CALL	_boxfill8
   701 00000833 8D 43 FC                        	LEA	EAX,DWORD [-4+EBX]
   702 00000836 6A 14                           	PUSH	20
   703 00000838 50                              	PUSH	EAX
   704 00000839 6A 03                           	PUSH	3
   705 0000083B 6A 03                           	PUSH	3
   706 0000083D 6A 0C                           	PUSH	12
   707 0000083F 53                              	PUSH	EBX
   708 00000840 FF 75 08                        	PUSH	DWORD [8+EBP]
   709 00000843 E8 [00000000]                   	CALL	_boxfill8
   710 00000848 83 C4 38                        	ADD	ESP,56
   711 0000084B 56                              	PUSH	ESI
   712 0000084C 57                              	PUSH	EDI
   713 0000084D 56                              	PUSH	ESI
   714 0000084E 6A 01                           	PUSH	1
   715 00000850 6A 0F                           	PUSH	15
   716 00000852 53                              	PUSH	EBX
   717 00000853 FF 75 08                        	PUSH	DWORD [8+EBP]
   718 00000856 E8 [00000000]                   	CALL	_boxfill8
   719 0000085B FF 75 E8                        	PUSH	DWORD [-24+EBP]
   720 0000085E FF 75 EC                        	PUSH	DWORD [-20+EBP]
   721 00000861 FF 75 E8                        	PUSH	DWORD [-24+EBP]
   722 00000864 6A 00                           	PUSH	0
   723 00000866 6A 00                           	PUSH	0
   724 00000868 6B F3 05                        	IMUL	ESI,EBX,5
   725 0000086B 53                              	PUSH	EBX
   726 0000086C FF 75 08                        	PUSH	DWORD [8+EBP]
   727 0000086F E8 [00000000]                   	CALL	_boxfill8
   728 00000874 83 C4 38                        	ADD	ESP,56
   729 00000877 FF 75 14                        	PUSH	DWORD [20+EBP]
   730 0000087A 6A 07                           	PUSH	7
   731 0000087C 6A 04                           	PUSH	4
   732 0000087E 6A 18                           	PUSH	24
   733 00000880 53                              	PUSH	EBX
   734 00000881 FF 75 08                        	PUSH	DWORD [8+EBP]
   735 00000884 E8 [00000000]                   	CALL	_puttext8
   736 00000889 83 C4 18                        	ADD	ESP,24
   737 0000088C C7 45 F0 00000000               	MOV	DWORD [-16+EBP],0
   738 00000893 C7 45 E0 00000000               	MOV	DWORD [-32+EBP],0
   739 0000089A                                 L52:
   740 0000089A 8D 04 1E                        	LEA	EAX,DWORD [ESI+EBX*1]
   741 0000089D 8B 55 08                        	MOV	EDX,DWORD [8+EBP]
   742 000008A0 31 FF                           	XOR	EDI,EDI
   743 000008A2 8D 4C 02 EB                     	LEA	ECX,DWORD [-21+EDX+EAX*1]
   744 000008A6                                 L51:
   745 000008A6 8B 45 E0                        	MOV	EAX,DWORD [-32+EBP]
   746 000008A9 8A 94 07 [0000005E]             	MOV	DL,BYTE [_closebtn.0+EDI+EAX*1]
   747 000008B0 80 FA 40                        	CMP	DL,64
   748 000008B3 74 33                           	JE	L57
   749 000008B5 80 FA 24                        	CMP	DL,36
   750 000008B8 74 2A                           	JE	L58
   751 000008BA 80 FA 51                        	CMP	DL,81
   752 000008BD B2 08                           	MOV	DL,8
   753 000008BF 0F 95 C0                        	SETNE	AL
   754 000008C2 28 C2                           	SUB	DL,AL
   755 000008C4                                 L46:
   756 000008C4 47                              	INC	EDI
   757 000008C5 88 11                           	MOV	BYTE [ECX],DL
   758 000008C7 41                              	INC	ECX
   759 000008C8 83 FF 0F                        	CMP	EDI,15
   760 000008CB 7E D9                           	JLE	L51
   761 000008CD FF 45 F0                        	INC	DWORD [-16+EBP]
   762 000008D0 01 DE                           	ADD	ESI,EBX
   763 000008D2 83 45 E0 10                     	ADD	DWORD [-32+EBP],16
   764 000008D6 83 7D F0 0D                     	CMP	DWORD [-16+EBP],13
   765 000008DA 7E BE                           	JLE	L52
   766 000008DC 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   767 000008DF 5B                              	POP	EBX
   768 000008E0 5E                              	POP	ESI
   769 000008E1 5F                              	POP	EDI
   770 000008E2 5D                              	POP	EBP
   771 000008E3 C3                              	RET
   772 000008E4                                 L58:
   773 000008E4 B2 0F                           	MOV	DL,15
   774 000008E6 EB DC                           	JMP	L46
   775 000008E8                                 L57:
   776 000008E8 31 D2                           	XOR	EDX,EDX
   777 000008EA EB D8                           	JMP	L46
   778 000008EC                                 	GLOBAL	_puttext8_sht
   779 000008EC                                 _puttext8_sht:
   780 000008EC 55                              	PUSH	EBP
   781 000008ED 89 E5                           	MOV	EBP,ESP
   782 000008EF 57                              	PUSH	EDI
   783 000008F0 56                              	PUSH	ESI
   784 000008F1 53                              	PUSH	EBX
   785 000008F2 53                              	PUSH	EBX
   786 000008F3 53                              	PUSH	EBX
   787 000008F4 8B 75 10                        	MOV	ESI,DWORD [16+EBP]
   788 000008F7 8B 45 08                        	MOV	EAX,DWORD [8+EBP]
   789 000008FA 8B 7D 0C                        	MOV	EDI,DWORD [12+EBP]
   790 000008FD 89 45 F0                        	MOV	DWORD [-16+EBP],EAX
   791 00000900 8B 45 1C                        	MOV	EAX,DWORD [28+EBP]
   792 00000903 8B 5D 14                        	MOV	EBX,DWORD [20+EBP]
   793 00000906 89 45 EC                        	MOV	DWORD [-20+EBP],EAX
   794 00000909 8D 46 0F                        	LEA	EAX,DWORD [15+ESI]
   795 0000090C 50                              	PUSH	EAX
   796 0000090D 8D 47 07                        	LEA	EAX,DWORD [7+EDI]
   797 00000910 50                              	PUSH	EAX
   798 00000911 56                              	PUSH	ESI
   799 00000912 57                              	PUSH	EDI
   800 00000913 0F B6 45 18                     	MOVZX	EAX,BYTE [24+EBP]
   801 00000917 50                              	PUSH	EAX
   802 00000918 8B 45 F0                        	MOV	EAX,DWORD [-16+EBP]
   803 0000091B 0F BE DB                        	MOVSX	EBX,BL
   804 0000091E FF 70 04                        	PUSH	DWORD [4+EAX]
   805 00000921 FF 30                           	PUSH	DWORD [EAX]
   806 00000923 E8 [00000000]                   	CALL	_boxfill8
   807 00000928 FF 75 EC                        	PUSH	DWORD [-20+EBP]
   808 0000092B 53                              	PUSH	EBX
   809 0000092C 56                              	PUSH	ESI
   810 0000092D 57                              	PUSH	EDI
   811 0000092E 8B 45 F0                        	MOV	EAX,DWORD [-16+EBP]
   812 00000931 FF 70 04                        	PUSH	DWORD [4+EAX]
   813 00000934 FF 30                           	PUSH	DWORD [EAX]
   814 00000936 E8 [00000000]                   	CALL	_puttext8
   815 0000093B 89 7D 0C                        	MOV	DWORD [12+EBP],EDI
   816 0000093E 8D 46 10                        	LEA	EAX,DWORD [16+ESI]
   817 00000941 89 75 10                        	MOV	DWORD [16+EBP],ESI
   818 00000944 89 45 18                        	MOV	DWORD [24+EBP],EAX
   819 00000947 83 C4 34                        	ADD	ESP,52
   820 0000094A 8D 47 08                        	LEA	EAX,DWORD [8+EDI]
   821 0000094D 89 45 14                        	MOV	DWORD [20+EBP],EAX
   822 00000950 8B 45 F0                        	MOV	EAX,DWORD [-16+EBP]
   823 00000953 89 45 08                        	MOV	DWORD [8+EBP],EAX
   824 00000956 8D 65 F4                        	LEA	ESP,DWORD [-12+EBP]
   825 00000959 5B                              	POP	EBX
   826 0000095A 5E                              	POP	ESI
   827 0000095B 5F                              	POP	EDI
   828 0000095C 5D                              	POP	EBP
   829 0000095D E9 [00000000]                   	JMP	_sheet_refresh
